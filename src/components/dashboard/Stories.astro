---
import type { MDXInstance } from 'astro'
import type { Story } from '../../types.d'
import Card from '../ui/Card.astro'

const production = import.meta.env.MODE === 'production'
const stories = (await Astro.glob<Story>('../../notebook/专题/*.mdx'))
  .filter(({ frontmatter }) => !production || !frontmatter.draft)
  .sort(
    (a: MDXInstance<Story>, b: MDXInstance<Story>) =>
      new Date(b.frontmatter.date.created).getTime() -
      new Date(a.frontmatter.date.created).getTime()
  )

export interface Props {
  mode?: 'grid' | 'list'
  limit?: number
}

const { mode = 'list', limit } = Astro.props
---

{
  stories.length === 0 ? (
    <div
      w="full"
      h="96"
      flex="~ col items-center justify-center"
      border="~ 1 color-line"
      bg="muted"
      rounded="md"
    >
      <h2 text="subtle">暂时没有专题</h2>
    </div>
  ) : (
    <ul
      w="extend"
      m="x--4"
      p="x-4 b-5 sm:b-0"
      flex={mode === 'grid' ? 'none' : '~ sm:grid'}
      grid={
        mode === 'grid'
          ? '~ cols-1 sm:cols-2 gap-x-4 gap-y-5'
          : 'sm:~ sm:cols-2 gap-x-4 gap-y-5'
      }
      overflow="x-auto sm:unset"
    >
      {stories.slice(0, limit || stories.length).map(({ frontmatter }) => (
        <li w="full">
          <Card
            type="story"
            href={`/story/${frontmatter.id}`}
            mode={mode}
            frontmatter={frontmatter}
          />
        </li>
      ))}
    </ul>
  )
}
