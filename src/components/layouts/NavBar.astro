---
import Divider from '@components/ui/Divider.astro'
import { Icon } from 'astro-icon/components'
import { getCollection } from 'astro:content'
import type { Article } from 'src/types'

export interface Props {
  title?: string
  favicon?: string
}

const links = [
  {
    name: '由「又拍云」提供 CDN 加速与云储存服务',
    href: 'https://www.upyun.com/?utm_source=lianmeng&utm_medium=referral',
  },
  { name: '鲁ICP备19006085号', href: 'https://beian.miit.gov.cn' },
  {
    name: '鲁公网安备37132102371392号',
    href: 'http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=37132102371392',
  },
]

const filter = ({ data }: { data: Article }) =>
  import.meta.env.DEV || !data.draft

const navs = [
  {
    name: '文章',
    count: (await getCollection('文章', filter)).length,
    icon: 'book',
  },
  {
    name: '专题',
    count: (await getCollection('专题', filter)).length,
    icon: 'message-2',
  },
  {
    name: '存档',
    count: (await getCollection('存档')).length,
    icon: 'list-search',
  },
  { name: '朋友', icon: 'circles-relation', count: undefined },
] as const

const apps = [
  { name: '代码可行', href: '/dev', icon: '/dev/favicon.svg' },
  { name: '时间之外', href: '/lab', icon: '/lab/favicon.svg' },
  { name: '越过长城', href: '/server', icon: '/server/favicon.svg' },
  {
    name: '随意链接',
    href: 'https://iokl.link',
    icon: '/link.svg',
  },
  {
    name: '开往 Traveling',
    href: 'https://travellings.cn/go',
    icon: '/favicon.svg',
  },
] as const

const { title = '记录干杯', favicon = '/favicon.svg' } = Astro.props
---

<div
  class="sticky top-0 left-0 w-full min-w-72 h-screen flex flex-col gap-8 items-center justify-between p-8 bg-light-50 dark:bg-dark-900 overflow-y-auto"
>
  <header class="w-full flex flex-row gap-4 py-4 items-center select-none">
    <img
      class="w-12 h-12 rounded-full shadow-lg hover:shadow-xl transition-shadow pointer-events-none"
      src={favicon}
      alt={`${title} Logo`}
    />
    <div class="flex flex-col gap-1">
      <h1 class="text-xl font-extrabold">{title}</h1>
      <span class="text-xs text-light-500 dark:text-dark-400">
        {' ​( ゜- ゜)つロ 干杯'}
      </span>
    </div>
  </header>
  <Divider />
  <nav class="w-full flex-1 flex flex-col gap-8">
    <ul>
      {
        navs.map(({ name, icon, count }) => (
          <li class="text-lg font-bold">
            <a
              class="flex items-center gap-4 px-3 py-2 rounded-md hover:bg-light-100 dark:hover:bg-dark-800 transition-colors"
              href={`/#${name}`}
            >
              <Icon class="w-6 h-6" name={`tabler:${icon}`} />
              <span>{name}</span>
              <span class="text-xs flex px-2 py-1 bg-light-100 dark:bg-dark-800 rounded-full">
                {count ? count.toString().padStart(2, '0') : ':-)'}
              </span>
            </a>
          </li>
        ))
      }
    </ul>
    <Divider />
    <ul>
      {
        apps.map(({ name, href, icon }) => (
          <li class="text-md font-bold">
            <a
              class="flex items-center gap-4 px-3 py-2 rounded-md hover:bg-light-100 dark:hover:bg-dark-800 transition-colors"
              {href}
              target={href.startsWith('http') ? '_blank' : '_self'}
              rel={
                href.startsWith('http') ? 'nofollow noopener noreferrer' : ''
              }
            >
              <img
                class="w-6 h-6 rounded-full shadow-lg pointer-events-none"
                src={icon}
                alt={`Logo ${name}`}
              />
              <span>{name}</span>
            </a>
          </li>
        ))
      }
    </ul>
  </nav>
  <Divider />
  <footer
    class="w-full flex flex-col gap-1.5 text-light-500 dark:text-dark-400"
  >
    {
      links.map(({ href, name }) => (
        <a
          {href}
          class="w-fit text-xs truncate hover:text-indigo-500 dark:hover:text-indigo-400 transition-colors"
          target="_blank"
          rel="nofollow noopener noreferrer"
        >
          {name}
        </a>
      ))
    }
  </footer>
</div>
