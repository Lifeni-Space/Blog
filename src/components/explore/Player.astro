---
import { music, list } from '../../const'
import { Icon } from 'astro-icon'
import Beat from '../base/Beat.astro'
import ExternalLink from '../base/ExternalLink.astro'
import Group from '../base/Group.astro'

const playlist = (await fetch(`${list}?id=7274116285`).then(r =>
  r.json()
)) as Playlist

const duration = (num: number) => {
  const t = Math.round(num / 1000)
  const m = Math.floor(t / 60)
  const s = Math.floor(t % 60)
  return `${m < 10 ? '0' : ''}${m}:${s < 10 ? '0' : ''}${s}`
}

const player = Astro.resolve('../../libs/cloud-music-player.ts')
---

<script defer type="module" src={player} hoist></script>

<Group title="来点音乐">
  <div data-player>
    <audio data-audio></audio>
    <div data-control>
      <div data-left>
        <ExternalLink
          href="https://music.163.com/playlist?id=7274116285"
          data-playlist
          data-tooltip="查看歌单"
        >
          <Icon name="tabler:playlist" aria-label="查看歌单" />
        </ExternalLink>
      </div>
      <div data-middle>
        <button data-previous data-tooltip="上一首">
          <Icon name="tabler:player-skip-back" aria-label="上一首" />
        </button>
        <button data-primary data-play-action="play" data-tooltip="播放">
          <Icon name="tabler:player-play" data-play aria-label="播放" />
          <Icon
            name="tabler:player-pause"
            data-pause
            data-remove
            aria-label="暂停"
          />
        </button>
        <button data-next data-tooltip="下一首">
          <Icon name="tabler:player-skip-forward" aria-label="下一首" />
        </button>
      </div>
      <div data-right>
        <button data-volume="on" data-tooltip="静音">
          <Icon name="tabler:volume" data-volume-off aria-label="静音" />
          <Icon
            name="tabler:volume-3"
            data-volume-on
            data-remove
            aria-label="取消静音"
          />
        </button>
      </div>
    </div>
    <ul>
      {playlist?.songs?.map(song => (
        <li data-music={`${music}?id=${song.id}.mp3`}>
          <div data-cover>
            <img loading="lazy" src={`${song.al.picUrl}?param=150x150`} />
            <div data-status>
              <Beat />
              <span>00:00</span>
            </div>
          </div>
          <div data-info>
            <span data-name title={song.name}>
              {song.name}
            </span>
            <span data-artist title={`${song.ar[0].name} - ${song.al.name}`}>
              {song.ar[0].name} - {song.al.name}
            </span>
          </div>
          <div data-side>
            <span data-duration>{duration(song.dt)}</span>
          </div>
        </li>
      ))}
    </ul>
  </div>
</Group>

<style lang="less">
  div[data-player] {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;

    div[data-control] {
      width: 100%;
      padding: 0 0.25rem;
      display: flex;
      align-items: center;
      justify-content: space-between;

      div[data-left],
      div[data-middle],
      div[data-right] {
        width: 100%;
        display: flex;
        align-items: center;
        flex: 1;
        gap: 0.25rem;

        a,
        button {
          width: 2.5rem;
          height: 2.5rem;
          padding: 0.5rem;
          border-radius: 100%;
          cursor: pointer;
          border: solid var(--border-width) var(--card-background);
          transition: all 0.2s;
          outline-offset: 0;

          &[data-primary] {
            width: 2.75rem;
            height: 2.75rem;
          }

          &:hover,
          &:focus-visible {
            border: var(--border);
            background-color: var(--card-background-focus);
          }
        }
      }

      div[data-left] {
        justify-content: flex-start;

        a {
          color: inherit;

          svg {
            width: 1.375rem;
            height: 1.375rem;
          }
        }
      }

      div[data-middle] {
        justify-content: center;
      }

      div[data-right] {
        justify-content: right;
      }
    }

    ul {
      width: 100%;
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(8rem, 1fr));
      list-style: none;

      @media (max-width: 36rem) {
        display: flex;
        flex-direction: column;
      }

      li {
        position: relative;
        width: 100%;
        padding: 0.75rem;
        display: flex;
        flex-direction: column;
        color: var(--font-primary);
        border-radius: var(--border-radius);
        border: solid var(--border-width) var(--card-background);
        cursor: pointer;
        gap: 0.5rem;

        @media (max-width: 36rem) {
          align-items: center;
          flex-direction: row;
          gap: 1.5rem;
        }

        div[data-cover] {
          position: relative;
          display: flex;
          align-items: center;

          div[data-status] {
            position: absolute;
            left: 0;
            top: 0;
            z-index: 2;
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            opacity: 0;
            visibility: hidden;
            border-radius: var(--border-radius);
            background-color: var(--dark-2a);

            span {
              color: var(--cover-color);
              font-size: 1.125rem;
            }
          }

          img {
            width: 100%;
            border: var(--border);
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            aspect-ratio: 1 / 1;

            @media (max-width: 36rem) {
              width: 3.5rem;
              height: 3.5rem;
            }
          }
        }

        div[data-info] {
          width: 100%;
          padding: 0.25rem 0 0;
          display: flex;
          flex-direction: column;
          justify-content: center;
          flex: 1;
          overflow: hidden;

          @media (max-width: 36rem) {
            padding: 0;
          }

          span[data-name] {
            line-height: 1.75;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
          }

          span[data-artist] {
            font-size: 0.925rem;
            line-height: 1.5;
            color: var(--font-secondary);
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap;
          }
        }

        div[data-side] {
          position: absolute;
          right: 0.75rem;
          top: 0.75rem;
          padding: 0 0.5rem;
          display: flex;
          font-size: 0.875rem;
          opacity: 0;
          visibility: hidden;
          border: var(--border);
          border-radius: 0 var(--border-radius) 0 var(--border-radius);
          background-color: var(--tooltip-background);
          color: var(--tooltip-color);

          @media (max-width: 36rem) {
            position: relative;
            top: unset;
            right: unset;
            padding: 0;
            font-size: 1rem;
            border: none;
            border-radius: 0;
            opacity: 1;
            visibility: visible;
            background-color: transparent;
            color: var(--font-primary);
            font-variant-numeric: tabular-nums;
            text-shadow: none;
          }
        }

        &:hover,
        &:focus-visible {
          text-decoration: none;
          border: var(--border);
          background-color: var(--card-background-focus);
          outline-offset: 0;

          div[data-side] {
            opacity: 1;
            visibility: visible;
          }
        }

        &[data-playing] {
          div[data-side] {
            display: none;

            @media (max-width: 36rem) {
              display: flex;
              font-weight: var(--font-bold);
            }
          }

          span[data-name] {
            @media (max-width: 36rem) {
              font-weight: bold;
            }
          }

          div[data-cover] div[data-status] {
            opacity: 1;
            visibility: visible;

            @media (max-width: 36rem) {
              & > span {
                display: none;
              }
            }
          }
        }
      }
    }
  }
</style>
