---
import Group from '../base/Group.astro'
import PostLink from './PostLink.astro'

const files = Astro.fetchContent('../../../contents/articles/*.md') as Article[]

const key: 'date' | 'create-date' = 'create-date'
const max = 4

const groups = files
  .sort((a, b) => {
    const unix = (str: string) => new Date(str).getTime()
    return unix(b[key]) - unix(a[key])
  })
  .reduce((pre, cur) => {
    const year = cur[key].slice(0, 4)
    const obj = pre
    if (obj.hasOwnProperty(year)) obj[year].push(cur)
    else obj[year] = [cur]
    return obj
  }, {}) as Group

const updates = files
  .sort((a, b) => {
    const unix = (str: string) => new Date(str).getTime()
    return unix(b['date']) - unix(a['date'])
  })
  .slice(0, 4)
---

<div data-list>
  <Group title="最近">
    <ul>{updates.map(article => <PostLink article={article} key="date" />)}</ul>
  </Group>

  {Object.keys(groups)
    .sort((a, b) => Number(b) - Number(a))
    .map(year => (
      <Group title={year}>
        <ul>
          {groups[year].slice(0, max).map(article => (
            <PostLink article={article} key={key} />
          ))}
          {groups[year][max] && (
            <li>
              <details>
                <summary>查看其余 {groups[year].length - max} 篇文章</summary>
                <ul>
                  {groups[year].slice(max).map(article => (
                    <PostLink article={article} key={key} />
                  ))}
                </ul>
              </details>
            </li>
          )}
        </ul>
      </Group>
    ))}
</div>

<style lang="less">
  div[data-list] {
    ul {
      width: 100%;
      list-style: none;

      details {
        summary {
          position: relative;
          width: 100%;
          padding: 0.25rem 0.75rem;
          display: flex;
          align-items: center;
          color: var(--font-primary);
          border-radius: var(--border-radius);
          border: solid var(--border-width) var(--card-background);
          cursor: pointer;
          gap: 0.75rem;
          color: var(--font-secondary);

          &::before {
            content: '->';
            position: absolute;
            right: 0;
            top: 0;
            padding: 0.25rem 0.75rem;
            display: inline-block;
            font-family: var(--font-mono);
            transition: all 0.2s;
          }

          &:hover,
          &:focus-visible {
            z-index: 1;
            border: var(--border);
            background-color: var(--card-background-focus);
          }

          &:focus-visible {
            z-index: 1;
            outline-color: var(--font-link);
            outline-width: 0.25rem;
            outline-offset: 0;
            outline-style: solid;
          }
        }

        &[open] summary {
          &::before {
            transform: rotate(90deg);
          }
        }
      }
    }
  }
</style>
