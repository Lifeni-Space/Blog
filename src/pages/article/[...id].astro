---
import Layout from '@components/notebook/Layout.astro'
import Footer from '@components/notebook/layout/Footer.astro'
import Header from '@components/notebook/layout/Header.astro'
import Nav from '@components/notebook/layout/Nav.astro'

import '@libs/markdown.less'
import { info } from '@libs/consts'
import { format } from '@libs/utils'
import { getCollection, type CollectionEntry } from 'astro:content'
import dayjs from 'dayjs'

export async function getStaticPaths() {
  const articles = (await getCollection('文章')).filter(
    entry => import.meta.env.DEV || !entry.data.draft
  )
  const archives = (await getCollection('存档')).map(({ data, ...props }) => ({
    ...props,
    data: { ...data, ...format(data) },
  }))
  return [...articles, ...archives].map(entry => ({
    params: { id: entry.data.id },
    props: { entry },
  }))
}

const date = (date: { created: Date; updated: Date }) => {
  const created = dayjs(date.created).format('YYYY 年 MM 月 DD 日')
  const updated = dayjs(date.updated).format('YYYY 年 MM 月 DD 日')
  if (created === updated) return `发布于 ${updated}`
  return `更新于 ${created}`
}

const { entry } = Astro.props as { entry: CollectionEntry<'文章'> }
const { Content: Markdown, headings } = await entry.render()

const title = `${entry.data.name} | ${info.title}`
const description = entry.data.description

export const prerender = true
---

<Layout {title} {description}>
  <Header slot="header" />
  <Nav slot="nav" />
  <Footer slot="footer" />
  <article class="prose" w="full" max-w="2xl" m="x-auto" p="6">
    <time text="main" font="semibold">
      {date(entry.data.date)}
    </time>
    <Markdown />
  </article>
</Layout>
