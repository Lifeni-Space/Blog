---
import type { MDXInstance } from 'astro'
import Layout from '../../components/Layout.astro'
import type { Article } from '../../types.d'
import { unify } from '../../libs/utils'

export async function getStaticPaths() {
  const production = import.meta.env.MODE === 'production'
  const output = (articles: MDXInstance<Article>[]) =>
    articles
      .filter(({ frontmatter }) => !production || !frontmatter.draft)
      .map(article => ({
        params: { id: article.frontmatter.id },
        props: { article },
      })) || []

  const articles = (await Astro.glob(
    '../../notebook/文章/*.mdx'
  )) as MDXInstance<Article>[]
  const archives = unify(await Astro.glob('../../notebook/存档/**/*.md'))

  return output([...articles, ...archives])
}

const { frontmatter, Content } = Astro.props.article
export const prerender = true
---

<Layout
  title={frontmatter.name}
  description={frontmatter.description}
  index
  content
>
  <div w="full" flex="~ 1 col items-center justify-start" p="4">
    <article w="full" max-w="2xl" text="base" p="x-2">
      <Content />
    </article>
  </div>
</Layout>
