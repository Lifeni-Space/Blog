---
import Layout from '../../components/Layout.astro'
import type { MDXInstance } from 'astro'
import Section from '../../components/layout/Section.astro'
import type { Article, Archive } from '../../types.d'
import { groupBy } from 'remeda'

export const unite = (arr: MDXInstance<Archive>[]) =>
  arr.map(archive => ({
    ...archive,
    frontmatter: {
      ...archive.frontmatter,
      name: archive.frontmatter.title,
      id: archive.frontmatter.name,
      date: {
        created: archive.frontmatter['create-date'],
        updated: archive.frontmatter['date'],
      },
    },
  }))

const group = (arr: MDXInstance<Article>[]) =>
  Object.entries(
    groupBy(
      arr.sort(
        (a: MDXInstance<Article>, b: MDXInstance<Article>) =>
          new Date(b.frontmatter.date.created).getTime() -
          new Date(a.frontmatter.date.created).getTime()
      ),
      article =>
        new Date(article.frontmatter.date.created).getFullYear().toString()
    )
  )
    .map(([year, articles]) => ({ year, articles }))
    .sort((a, b) => Number(b.year) - Number(a.year))

const articles = group(await Astro.glob<Article>('../../notebook/文章/*.mdx'))
const archives = group(
  unite(await Astro.glob<Archive>('../../notebook/存档/**/*.md'))
)

const date = (date: string) => {
  const d = new Date(date)
  const p = (num: number) => num.toString().padStart(2, '0')
  return `${p(d.getMonth() + 1)}/${p(d.getDate())}`
}

export const prerender = true
---

<Layout title="文章" index>
  <div w="full" flex="~ 1 col items-center justify-start gap-6 sm:gap-8" p="4">
    {
      [...articles, ...archives].map(({ year, articles }) => (
        <Section name={year} card>
          <ul w="full" p="2">
            {articles.map(article => (
              <li class="group" w="full" flex="~">
                <a
                  href={`/article/${article.frontmatter.id}`}
                  w="full"
                  flex="~ row items-center justify-start gap-4"
                  p="x-3 sm:x-2 y-2"
                  bg="hover:subtle"
                  text="truncate"
                  rounded="md"
                  transition="background-color"
                >
                  <code text="subtle sm" font="mono 700">
                    {date(article.frontmatter.date.created)}
                  </code>
                  <span flex="1" text="truncate">
                    {article.frontmatter.name}
                  </span>
                  <code
                    class="op-0 group-hover:op-100"
                    display="none sm:flex"
                    text="subtle sm"
                    font="mono 700"
                    transform="translate-x--2 group-hover:translate-x-0"
                    transition="all"
                  >
                    {'-->'}
                  </code>
                </a>
              </li>
            ))}
          </ul>
        </Section>
      ))
    }
  </div>
</Layout>
