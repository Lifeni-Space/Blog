---
import Comments from 'component:Comments'
import Layout from 'component:Layout'
import { Icon } from 'astro-icon'

export interface Props {
  article: Article
}

const { article } = Astro.props as Props

export async function getStaticPaths() {
  const files = Astro.fetchContent(
    '../../../contents/articles/*.md'
  ) as Article[]

  return files.map(file => ({
    params: { name: file.name },
    props: { article: file },
  }))
}

console.log(article.astro.headers)

const date = `${article.date.slice(0, 4)} 年 ${article.date.slice(
  5,
  7
)} 月 ${article.date.slice(8, 10)} 日`
---

<Layout title={article.title} description={article.description}>
  <main>
    <article data-serif={article.serif}>
      {article.astro.html}

      <section>
        <time>
          <Icon name="mdi:clock-outline" aria-label="时间" />
          编辑于 {date}
        </time>

        <a
          href={article.license === 'CC-BY-SA-4.0'
            ? 'https://creativecommons.org/licenses/by-sa/4.0/deed.zh'
            : `https://www.google.com.hk/search?q=${article.license}`}
          target="_blank"
          rel="nofollow noopener noreferrer"
        >
          <Icon name="mdi:copyright" aria-label="版权" />
          {article.license}
        </a>
        <span data-spacer></span>
        <button onclick="window.scrollTo(0, 0)">
          <Icon name="mdi:arrow-up" aria-label="顶部" />
          返回顶部
        </button>
      </section>
    </article>

    {article.astro.headers.length !== 1 && (
      <nav data-contents data-hide="true">
        <span aria-hidden="true" data-scrollbar></span>
        <ul>
          {article.astro.headers.map(
            header =>
              (header.depth === 2 || header.depth === 3) && (
                <li data-depth={header.depth}>
                  <a href={`#${header.slug}`}>{header.text}</a>
                </li>
              )
          )}
        </ul>
      </nav>
    )}

    <Comments />
  </main>
</Layout>

<script type="module">
  const images = document.querySelectorAll('article img')
  if (images.length !== 0) {
    const zoom = await import('https://cdn.skypack.dev/medium-zoom')
    zoom.default(images, { background: 'rgba(0, 0, 0, 0.8)' })
  }
</script>

<script type="module">
  const contents = document.querySelector('[data-contents]')
  if (contents) {
    const debounce = await import('https://cdn.skypack.dev/lodash.debounce')

    let documentHeight = document.documentElement.scrollHeight
    let windowHeight = window.innerHeight
    let heightPercent = windowHeight / documentHeight

    const scrollbar = document.querySelector('[data-scrollbar]')

    const calc = () => {
      windowHeight = window.innerHeight
      documentHeight = document.documentElement.scrollHeight
      heightPercent = windowHeight / documentHeight

      const scrollY = window.scrollY
      const topPercent = scrollY / documentHeight

      scrollbar.style.setProperty('--scrollbar-top', `${topPercent * 100}%`)
      scrollbar.style.setProperty(
        '--scrollbar-height',
        `${heightPercent * 100}%`
      )

      if (scrollY < 100) contents.setAttribute('data-hide', 'true')
      else contents.setAttribute('data-hide', 'false')
    }

    calc()

    if (debounce) {
      window.addEventListener('scroll', debounce.default(calc, 100))
      window.addEventListener('resize', debounce.default(calc, 100))
    }
  }
</script>

<style lang="less">
  main {
    width: 100%;
    max-width: var(--main-width);
    margin: 0 auto;
    padding: 1.5rem 3.5rem;
    display: flex;
    flex-direction: column;
    flex: 1;
  }

  article {
    margin: 1rem 0 3rem 0;
    font-family: var(--font-sans);

    section {
      display: flex;
      align-items: center;
      width: calc(100% + 3rem);
      margin: 2rem -1.5rem 0 -1.5rem;
      padding: 2.5rem 1.5rem 0 1.5rem;
      border-top: var(--border);
      color: var(--font-secondary);
      font-family: var(--font-sans);
      gap: 1.5rem;

      a,
      button,
      time {
        display: flex;
        align-items: center;
        font-size: 1rem;

        svg {
          margin-right: 0.625rem;
          width: 1.125rem;
          height: 1.125rem;
        }
      }

      button:hover {
        color: var(--font-link);
      }
    }
  }

  nav[data-contents] {
    position: fixed;
    top: 50%;
    left: 4rem;
    width: 18rem;
    border-left: var(--border);
    color: var(--font-secondary);
    opacity: 0;
    transform: translateY(-50%);

    [data-scrollbar] {
      position: absolute;
      left: calc(var(--border-width) * -1);
      top: var(--scrollbar-top);
      z-index: 1;
      height: var(--scrollbar-height);
      width: var(--border-width);
      display: flex;
      background-color: var(--font-primary);
      opacity: 1;
      transition: top 0.4s cubic-bezier(0.29, 1, 0.46, 1), opacity 0.2s 0.3s;
    }

    ul {
      max-height: calc(100vh - 18rem);
      height: 100%;
      padding: 0.25rem 1.5rem;
      overflow-y: auto;
      scrollbar-width: none;
      border-radius: 0 var(--border-radius) var(--border-radius) 0;

      &::-webkit-scrollbar {
        display: none;
      }

      li {
        width: 100%;
        padding: 0.125rem 0;
        list-style: none;
        text-overflow: ellipsis;
        overflow: hidden;
        white-space: nowrap;

        a {
          width: 100%;
          padding: 0.5rem 0;
          color: inherit;

          &:hover {
            text-decoration: none;
            color: var(--font-link);
          }
        }

        &[data-depth='2'] {
          font-weight: 800;
        }
      }
    }
  }
</style>
